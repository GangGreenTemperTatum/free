name: Deploy Calendar Free Time

on:
  schedule:
    # Run daily at 4:00 AM UTC
    - cron: "0 4 * * *"
  workflow_dispatch:
    # Allow manual trigger from GitHub UI
  pull_request:
    branches:
      - "**" # Run on PRs targeting any branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
      GITHUB_ACTIONS: true
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.10"

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          npm install -g wrangler

      - name: Create minimal .env file
        run: |
          cat > .env << 'EOF'
          CLOUDFLARE_ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}
          PROJECT_NAME=${{ secrets.PROJECT_NAME }}
          EXT_DIR=$(head -c 32 /dev/urandom | base64 | tr -dc 'a-zA-Z0-9' | head -c 32)
          EOF

      - name: Download calendar files
        run: |
          # Ensure cal directory exists and is empty
          rm -rf cal
          mkdir -p cal

          # Use a counter to track how many calendars we've processed
          COUNTER=0

          # Process each calendar URL sequentially (supports any number)
          for i in {1..10}; do
            SECRET_NAME="CAL_URL_$i"
            URL_VALUE="${!SECRET_NAME}"

            if [ -n "$URL_VALUE" ]; then
              echo "Downloading calendar $i..."
              if curl --output /dev/null --silent --head --fail "$URL_VALUE"; then
                wget -O cal/calendar${i}.ics "$URL_VALUE"
                echo "Calendar $i downloaded successfully"
                COUNTER=$((COUNTER+1))
              else
                echo "Warning: Calendar $i URL returned an error."
              fi
            fi
          done

          # Verify we have at least one calendar file
          if [ "$COUNTER" -eq 0 ]; then
            echo "Error: No valid calendar files were downloaded."
            echo "Please check that your calendar URL secrets are correctly configured."
            exit 1
          fi

          # Show downloaded files (without exposing sensitive content)
          echo "Downloaded $COUNTER calendar files"
          ls -la cal

      - name: Make deploy script executable
        run: chmod +x deploy.sh

      - name: Run deploy script
        run: ./deploy.sh

      - name: Verify deployment
        run: |
          echo "Deployment completed."
          echo "Free time finder is now available at: https://${{ secrets.PROJECT_NAME }}.pages.dev"
