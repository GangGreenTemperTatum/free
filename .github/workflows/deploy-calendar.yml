name: Deploy Calendar Free Time

on:
  schedule:
    # Run daily at 4:00 AM UTC
    - cron: "0 4 * * *"
  workflow_dispatch:
    # Allow manual trigger from GitHub UI
  pull_request:
    branches:
      - "**" # Run on PRs targeting any branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
      GITHUB_ACTIONS: true
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.10"

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          npm install -g wrangler

      - name: Create minimal .env file
        run: |
          cat > .env << 'EOF'
          CLOUDFLARE_ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}
          PROJECT_NAME=${{ secrets.PROJECT_NAME }}
          # EXT_DIR will be generated by the script
          EOF

      - name: Download calendar files
        run: |
          mkdir -p cal

          # First calendar - check if it exists and is valid
          if [ -n "${{ secrets.CAL_URL_1 }}" ]; then
            echo "Downloading first calendar..."
            if curl --output /dev/null --silent --head --fail "${{ secrets.CAL_URL_1 }}"; then
              wget -O cal/calendar1.ics "${{ secrets.CAL_URL_1 }}"
              echo "First calendar downloaded successfully"
            else
              echo "Warning: First calendar URL returned an error."
            fi
          fi

          # Second calendar - check if it exists and is valid
          if [ -n "${{ secrets.CAL_URL_2 }}" ]; then
            echo "Downloading second calendar..."
            if curl --output /dev/null --silent --head --fail "${{ secrets.CAL_URL_2 }}"; then
              wget -O cal/calendar2.ics "${{ secrets.CAL_URL_2 }}"
              echo "Second calendar downloaded successfully"
            else
              echo "Warning: Second calendar URL returned an error."
            fi
          fi

          # Additional calendars can be added here using the same pattern

          # Verify we have at least one calendar file
          if [ "$(find cal -name '*.ics' | wc -l)" -eq 0 ]; then
            echo "Error: No valid calendar files were downloaded."
            exit 1
          fi

          # List downloaded calendars
          echo "Downloaded calendar files:"
          ls -la cal/

      - name: Make deploy script executable
        run: chmod +x deploy.sh

      - name: Run deploy script
        run: ./deploy.sh

      - name: Verify deployment
        run: |
          echo "Deployment completed."
          echo "Free time finder is now available at: https://${{ secrets.PROJECT_NAME }}.pages.dev"
